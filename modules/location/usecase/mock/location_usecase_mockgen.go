// Code generated by MockGen. DO NOT EDIT.
// Source: modules/location/usecase/usecase.go

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	model "loket-app/modules/location/model"
	reflect "reflect"
)

// MockLocationUseCase is a mock of LocationUseCase interface
type MockLocationUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockLocationUseCaseMockRecorder
}

// MockLocationUseCaseMockRecorder is the mock recorder for MockLocationUseCase
type MockLocationUseCaseMockRecorder struct {
	mock *MockLocationUseCase
}

// NewMockLocationUseCase creates a new mock instance
func NewMockLocationUseCase(ctrl *gomock.Controller) *MockLocationUseCase {
	mock := &MockLocationUseCase{ctrl: ctrl}
	mock.recorder = &MockLocationUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockLocationUseCase) EXPECT() *MockLocationUseCaseMockRecorder {
	return m.recorder
}

// CreateLocation mocks base method
func (m *MockLocationUseCase) CreateLocation(data *model.CreateLocationReq) (*model.Location, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateLocation", data)
	ret0, _ := ret[0].(*model.Location)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateLocation indicates an expected call of CreateLocation
func (mr *MockLocationUseCaseMockRecorder) CreateLocation(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateLocation", reflect.TypeOf((*MockLocationUseCase)(nil).CreateLocation), data)
}

// LoadLocationByID mocks base method
func (m *MockLocationUseCase) LoadLocationByID(id uint64) (*model.Location, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoadLocationByID", id)
	ret0, _ := ret[0].(*model.Location)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LoadLocationByID indicates an expected call of LoadLocationByID
func (mr *MockLocationUseCaseMockRecorder) LoadLocationByID(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadLocationByID", reflect.TypeOf((*MockLocationUseCase)(nil).LoadLocationByID), id)
}
